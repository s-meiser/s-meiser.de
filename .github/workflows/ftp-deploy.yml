name: Deploy website

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

jobs:
  web-deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment: ftp-deploy
    defaults:
      run:
        working-directory: ./app
    steps:

      #get staging branch
      - uses: actions/checkout@v3
        with:
          ref: staging

      # build js/css files
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: yarn install
      - run: yarn encore production

      # install php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true
      - name: Check PHP Version
        run: php -v

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      # Prepare .env file for production
      - name: Make production envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_APP_ENV: prod
          envkey_APP_DEBUG: false
          envkey_APP_SECRET: ${{ secrets.APP_SECRET }}
          file_name: .env

      - name: Debug
        run: |
          ls -al ./public/

      - name: Convert .env to production php file
        run: |
          composer dump-env prod

      - name: Debug
        run: |
          ls -al ./

      # install lftp
      - name: Install lftp
        run: |
          sudo apt-get update
          sudo apt-get install -y lftp

      # cleanup
#      - name: Cleanup

      # Sync files
#      - name: Sync files
#        run: lftp -c "open ${{ secrets.HOST }}; user $FTP_USER $FTP_PASS; mirror -R --ignore-time --parallel=10 -v --exclude-glob .git* --exclude .github/ --exclude '*.swp' ." ./
#        env:
#          FTP_USER: ${{ secrets.USER }}
#          FTP_PASS: ${{ secrets.PASS }}